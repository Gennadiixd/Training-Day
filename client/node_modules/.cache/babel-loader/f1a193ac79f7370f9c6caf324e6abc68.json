{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer/ExerciseContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { heatupAC, startTimerAC, setExerciseQuantityAC, decrExerciseQuantityAC } from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport './ExerciseContainer.css';\nimport Timer from '../Timer/Timer';\nimport Exercise from '../Exrcise/Exercise';\nimport Neck from '../HeatUpImg/neck.jpg';\nimport Hands from '../HeatUpImg/hands.jpg';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction StartAndPauseContainer(props) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        exerciseNumber = _useState2[0],\n        setExerciseNumber = _useState2[1];\n\n  let heatupArray = [{\n    name: 'Neck',\n    img: Neck,\n    duration: 100\n  }, {\n    name: 'Hands',\n    img: Hands,\n    duration: 15\n  }];\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Exercise, {\n    exercise: heatupArray[exerciseNumber],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Timer, {\n    duration: heatupArray[exerciseNumber].duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    heatup: exercise => {\n      dispatch(heatupAC(exercise));\n    },\n    startTimer: seconds => {\n      dispatch(startTimerAC(seconds));\n    },\n    setExerciseQuantity: quntity => {\n      dispatch(setExerciseQuantityAC(quntity));\n    },\n    decrExerciseQuantity: () => {\n      dispatch(decrExerciseQuantityAC());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartAndPauseContainer);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer/ExerciseContainer.jsx"],"names":["React","useState","useEffect","heatupAC","startTimerAC","setExerciseQuantityAC","decrExerciseQuantityAC","connect","Timer","Exercise","Neck","Hands","mapStateToProps","state","StartAndPauseContainer","props","exerciseNumber","setExerciseNumber","heatupArray","name","img","duration","mapDispatchToProps","dispatch","heatup","exercise","startTimer","seconds","setExerciseQuantity","quntity","decrExerciseQuantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,qBAAjC,EAAwDC,sBAAxD,QAAsF,6BAAtF;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,yBAAP;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA;AADgC,CAAZ,CAAxB;;AAIA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,oBACSd,QAAQ,CAAC,CAAD,CADjB;AAAA;AAAA,QAC5Be,cAD4B;AAAA,QACZC,iBADY;;AAEnC,MAAIC,WAAW,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAEV,IAArB;AAA2BW,IAAAA,QAAQ,EAAG;AAAtC,GAAD,EAA8C;AAAEF,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAET,KAAtB;AAA6BU,IAAAA,QAAQ,EAAG;AAAxC,GAA9C,CAAlB;AAEA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,WAAW,CAACF,cAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAIE,WAAW,CAACF,cAAD,CAAX,CAA4BK,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAGC,QAAD,IAAc;AAAEF,MAAAA,QAAQ,CAACpB,QAAQ,CAACsB,QAAD,CAAT,CAAR;AAA8B,KADnD;AAEHC,IAAAA,UAAU,EAAGC,OAAD,IAAa;AAAEJ,MAAAA,QAAQ,CAACnB,YAAY,CAACuB,OAAD,CAAb,CAAR;AAAiC,KAFzD;AAGHC,IAAAA,mBAAmB,EAAGC,OAAD,IAAa;AAAEN,MAAAA,QAAQ,CAAClB,qBAAqB,CAACwB,OAAD,CAAtB,CAAR;AAA0C,KAH3E;AAIHC,IAAAA,oBAAoB,EAAE,MAAM;AAAEP,MAAAA,QAAQ,CAACjB,sBAAsB,EAAvB,CAAR;AAAoC;AAJ/D,GAAP;AAMH,CAPD;;AASA,eAAeC,OAAO,CAClBK,eADkB,EAElBU,kBAFkB,CAAP,CAGbR,sBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { heatupAC, startTimerAC, setExerciseQuantityAC, decrExerciseQuantityAC } from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport './ExerciseContainer.css'\n\nimport Timer from '../Timer/Timer';\nimport Exercise from '../Exrcise/Exercise'\nimport Neck from '../HeatUpImg/neck.jpg'\nimport Hands from '../HeatUpImg/hands.jpg'\n\n\nconst mapStateToProps = (state) => ({\n    state\n});\n\nfunction StartAndPauseContainer(props) {\n    const [exerciseNumber, setExerciseNumber] = useState(0)\n    let heatupArray = [{ name: 'Neck', img: Neck, duration : 100 }, { name: 'Hands', img: Hands, duration : 15 }]\n\n    return (\n        <>\n            <div className='imgContainer'>\n                <Exercise exercise={heatupArray[exerciseNumber]} />\n            </div>\n            <Timer duration = {heatupArray[exerciseNumber].duration}/>\n        </>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        heatup: (exercise) => { dispatch(heatupAC(exercise)) },\n        startTimer: (seconds) => { dispatch(startTimerAC(seconds)) },\n        setExerciseQuantity: (quntity) => { dispatch(setExerciseQuantityAC(quntity)) },\n        decrExerciseQuantity: () => { dispatch(decrExerciseQuantityAC()) }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StartAndPauseContainer);\n"]},"metadata":{},"sourceType":"module"}