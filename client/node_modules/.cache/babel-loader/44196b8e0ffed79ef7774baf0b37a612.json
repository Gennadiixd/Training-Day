{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"./Timer.css\";\nexport default function Timer(props) {\n  const _useState = useState(100),\n        _useState2 = _slicedToArray(_useState, 2),\n        progressState = _useState2[0],\n        setprogressState = _useState2[1];\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      updateProgress(props.time);\n    }, 1000);\n\n    if (progressState < 0) {\n      clearTimeout(timer);\n    } else if (props.time === 'stop') {\n      clearTimeout(timer);\n    }\n  });\n\n  function updateProgress(value) {\n    setprogressState(progressState - value);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"progressbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: progressState + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), progressState < 0 && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"WELL DONE!!!\"));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","Timer","props","progressState","setprogressState","timer","setTimeout","updateProgress","time","clearTimeout","value","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBACSH,QAAQ,CAAC,GAAD,CADjB;AAAA;AAAA,QAC1BI,aAD0B;AAAA,QACXC,gBADW;;AAGjCJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,GAAGC,UAAU,CAAC,MAAM;AACzBC,MAAAA,cAAc,CAACL,KAAK,CAACM,IAAP,CAAd;AACH,KAFqB,EAEnB,IAFmB,CAAtB;;AAGA,QAAIL,aAAa,GAAG,CAApB,EAAuB;AACnBM,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACH,KAFD,MAEO,IAAIH,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AAC9BC,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACH;AACJ,GATQ,CAAT;;AAWA,WAASE,cAAT,CAAwBG,KAAxB,EAA+B;AAC3BN,IAAAA,gBAAgB,CAACD,aAAa,GAAGO,KAAjB,CAAhB;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAER,aAAa,GAAG;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAIKA,aAAa,GAAG,CAAhB,IAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJ1B,CADJ;AASH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./Timer.css\";\n\nexport default function Timer(props) {\n    const [progressState, setprogressState] = useState(100)\n\n    useEffect(() => {        \n        let timer = setTimeout(() => {\n            updateProgress(props.time)\n        }, 1000)\n        if (progressState < 0) {\n            clearTimeout(timer)\n        } else if (props.time === 'stop') {\n            clearTimeout(timer)\n        }\n    });\n\n    function updateProgress(value) {\n        setprogressState(progressState - value)\n    }\n\n    return (\n        <div>\n            <div id=\"progressbar\">\n                <div style={{ width: progressState + '%' }}></div>\n            </div>\n            {progressState < 0 && <div>WELL DONE!!!</div>}\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}