{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Route } from 'react-router-dom';\nimport { heatupAC, trainingAC } from \"./redux/actions/actions\";\nimport Header from './components/Header/Header';\nimport Activity from './components/Activity/Activity';\nimport StratAndPauseButton from './components/StratAndPauseButton/StratAndPauseButton';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction App(props) {\n  const _useState = useState(props.state.training.status),\n        _useState2 = _slicedToArray(_useState, 2),\n        appState = _useState2[0],\n        setAppState = _useState2[1];\n\n  const _useState3 = useState(props.setHeatup),\n        _useState4 = _slicedToArray(_useState3, 2),\n        setHeatup = _useState4[0],\n        setSetHeatup = _useState4[1];\n\n  const _useState5 = useState(props.setTraining),\n        _useState6 = _slicedToArray(_useState5, 2),\n        setTraining = _useState6[0],\n        setSetTraining = _useState6[1]; // let appState = props.state.training.status;\n  // let setHeatup = props.setHeatup;\n  // let setTraining = props.setTraining;\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Header, {\n    state: appState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Heatup\",\n    render: props => React.createElement(Activity, {\n      setActivity: setHeatup,\n      fetchAdress: '/exercises/heatup',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }),\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Training\",\n    render: props => React.createElement(Activity, {\n      setActivity: setTraining,\n      fetchAdress: '/exercises/training',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    component: StratAndPauseButton,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setHeatup: exercise => {\n      dispatch(heatupAC(exercise));\n    },\n    setTraining: exercise => {\n      dispatch(trainingAC(exercise));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/client/src/App.js"],"names":["React","useState","useEffect","connect","Route","heatupAC","trainingAC","Header","Activity","StratAndPauseButton","mapStateToProps","state","App","props","training","status","appState","setAppState","setHeatup","setSetHeatup","setTraining","setSetTraining","mapDispatchToProps","dispatch","exercise"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,yBAArC;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCA,EAAAA;AADkC,CAAZ,CAAxB;;AAIA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBAEcZ,QAAQ,CAACY,KAAK,CAACF,KAAN,CAAYG,QAAZ,CAAqBC,MAAtB,CAFtB;AAAA;AAAA,QAEXC,QAFW;AAAA,QAEDC,WAFC;;AAAA,qBAGgBhB,QAAQ,CAACY,KAAK,CAACK,SAAP,CAHxB;AAAA;AAAA,QAGXA,SAHW;AAAA,QAGAC,YAHA;;AAAA,qBAIoBlB,QAAQ,CAACY,KAAK,CAACO,WAAP,CAJ5B;AAAA;AAAA,QAIXA,WAJW;AAAA,QAIEC,cAJF,kBAMlB;AACA;AACA;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEL,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,MAAM,EAAGH,KAAD,IAAW,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAEK,SAAvB;AAAkC,MAAA,WAAW,EAAE,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC;AAAgH,IAAA,KAAK,MAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAEO,WAAvB;AAAoC,MAAA,WAAW,EAAE,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3C;AAAsH,IAAA,KAAK,MAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEX,mBAA3B;AAAgD,IAAA,KAAK,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLL,IAAAA,SAAS,EAAGM,QAAD,IAAc;AAAED,MAAAA,QAAQ,CAAClB,QAAQ,CAACmB,QAAD,CAAT,CAAR;AAA8B,KADpD;AAELJ,IAAAA,WAAW,EAAGI,QAAD,IAAc;AAAED,MAAAA,QAAQ,CAACjB,UAAU,CAACkB,QAAD,CAAX,CAAR;AAAgC;AAFxD,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CACpBO,eADoB,EAEpBY,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Route } from 'react-router-dom';\nimport { heatupAC, trainingAC } from \"./redux/actions/actions\";\n\nimport Header from './components/Header/Header';\nimport Activity from './components/Activity/Activity'\nimport StratAndPauseButton from './components/StratAndPauseButton/StratAndPauseButton'\n\nconst mapStateToProps = (state) => ({\n  state\n});\n\nfunction App(props) {\n\n  const [appState, setAppState] = useState(props.state.training.status)\n  const [setHeatup, setSetHeatup] = useState(props.setHeatup)\n  const [setTraining, setSetTraining] = useState(props.setTraining)\n\n  // let appState = props.state.training.status;\n  // let setHeatup = props.setHeatup;\n  // let setTraining = props.setTraining;\n\n  return (\n    <div className='App'>\n      <Header state={appState} />\n      <Route path='/Heatup' render={(props) => <Activity setActivity={setHeatup} fetchAdress={'/exercises/heatup'}/>} exact />\n      <Route path='/Training' render={(props) => <Activity setActivity={setTraining} fetchAdress={'/exercises/training'}/>} exact />      \n      {/* Route на оценку */}\n      <Route path='/' component={StratAndPauseButton} exact />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setHeatup: (exercise) => { dispatch(heatupAC(exercise)) },\n    setTraining: (exercise) => { dispatch(trainingAC(exercise)) },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\n"]},"metadata":{},"sourceType":"module"}