{"ast":null,"code":"var _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"./Timer.css\";\nexport default function Timer(props) {\n  // const [progressState, setprogressState] = useState(100)\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      updateProgress(5);\n    }, 100);\n\n    if (props.progressState <= 0) {\n      clearTimeout(timer);\n      props.setNeedChange(true);\n    } // else if (props.time.status === 'pauseTimer') {\n    //     clearTimeout(timer)     \n    // }\n\n  });\n\n  function updateProgress(value) {\n    props.setprogressState(props.progressState - value);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"timerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"progressbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: props.progressState + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","Timer","props","timer","setTimeout","updateProgress","progressState","clearTimeout","setNeedChange","value","setprogressState","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAK,GAAGC,UAAU,CAAC,MAAM;AACzBC,MAAAA,cAAc,CAAC,CAAD,CAAd;AACH,KAFqB,EAEnB,GAFmB,CAAtB;;AAGA,QAAIH,KAAK,CAACI,aAAN,IAAuB,CAA3B,EAA8B;AAC1BC,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACAD,MAAAA,KAAK,CAACM,aAAN,CAAoB,IAApB;AACH,KAPW,CAQZ;AACA;AACA;;AACH,GAXQ,CAAT;;AAaA,WAASH,cAAT,CAAwBI,KAAxB,EAA+B;AAC3BP,IAAAA,KAAK,CAACQ,gBAAN,CAAuBR,KAAK,CAACI,aAAN,GAAsBG,KAA7C;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAET,KAAK,CAACI,aAAN,GAAsB;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./Timer.css\";\n\nexport default function Timer(props) {\n    // const [progressState, setprogressState] = useState(100)\n    \n    useEffect(() => {      \n        let timer = setTimeout(() => {\n            updateProgress(5)\n        }, 100)\n        if (props.progressState <= 0) {\n            clearTimeout(timer)\n            props.setNeedChange(true); \n        } \n        // else if (props.time.status === 'pauseTimer') {\n        //     clearTimeout(timer)     \n        // }\n    });\n\n    function updateProgress(value) {\n        props.setprogressState(props.progressState - value)\n    }\n\n    return (\n        <div className='timerContainer'>\n            <div id=\"progressbar\">        \n                <div style={{ width: props.progressState + '%' }}></div>\n            </div>            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}