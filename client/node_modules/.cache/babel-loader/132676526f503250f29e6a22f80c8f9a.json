{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { heatupAC, startTimerAC, setExerciseQuantityAC, decrExerciseQuantityAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport Timer from './Timer/Timer';\nimport Exercise from './Exrcise/Exercise';\nimport Neck from './Heatup/neck';\nimport Hands from './Heatup/hands';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction StartAndPauseContainer(props) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        exerciseNumber = _useState2[0],\n        setExerciseNumber = _useState2[1];\n\n  let exerciseArray = [{\n    name: 'Neck',\n    img: Neck\n  }, {\n    name: 'Hands',\n    img: Hands\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Exercise, {\n    exercise: exerciseArray[exerciseNumber].img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Timer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    heatup: exercise => {\n      dispatch(heatupAC(exercise));\n    },\n    startTimer: seconds => {\n      dispatch(startTimerAC(seconds));\n    },\n    setExerciseQuantity: quntity => {\n      dispatch(setExerciseQuantityAC(quntity));\n    },\n    decrExerciseQuantity: () => {\n      dispatch(decrExerciseQuantityAC());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartAndPauseContainer);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx"],"names":["React","useState","useEffect","heatupAC","startTimerAC","setExerciseQuantityAC","decrExerciseQuantityAC","connect","Timer","Exercise","Neck","Hands","mapStateToProps","state","StartAndPauseContainer","props","exerciseNumber","setExerciseNumber","exerciseArray","name","img","mapDispatchToProps","dispatch","heatup","exercise","startTimer","seconds","setExerciseQuantity","quntity","decrExerciseQuantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,qBAAjC,EAAwDC,sBAAxD,QAAsF,0BAAtF;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA;AADgC,CAAZ,CAAxB;;AAIA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,oBACSd,QAAQ,CAAC,CAAD,CADjB;AAAA;AAAA,QAC5Be,cAD4B;AAAA,QACZC,iBADY;;AAEnC,MAAIC,aAAa,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAEV;AAArB,GAAD,EAA8B;AAAES,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAET;AAAtB,GAA9B,CAApB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAIO,aAAa,CAACF,cAAD,CAAb,CAA8BI,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAGC,QAAD,IAAc;AAAEF,MAAAA,QAAQ,CAACnB,QAAQ,CAACqB,QAAD,CAAT,CAAR;AAA8B,KADnD;AAEHC,IAAAA,UAAU,EAAGC,OAAD,IAAa;AAAEJ,MAAAA,QAAQ,CAAClB,YAAY,CAACsB,OAAD,CAAb,CAAR;AAAiC,KAFzD;AAGHC,IAAAA,mBAAmB,EAAGC,OAAD,IAAa;AAAEN,MAAAA,QAAQ,CAACjB,qBAAqB,CAACuB,OAAD,CAAtB,CAAR;AAA0C,KAH3E;AAIHC,IAAAA,oBAAoB,EAAE,MAAM;AAAEP,MAAAA,QAAQ,CAAChB,sBAAsB,EAAvB,CAAR;AAAoC;AAJ/D,GAAP;AAMH,CAPD;;AASA,eAAeC,OAAO,CAClBK,eADkB,EAElBS,kBAFkB,CAAP,CAGbP,sBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { heatupAC, startTimerAC, setExerciseQuantityAC, decrExerciseQuantityAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nimport Timer from './Timer/Timer';\nimport Exercise from './Exrcise/Exercise'\nimport Neck from './Heatup/neck'\nimport Hands from './Heatup/hands'\n\nconst mapStateToProps = (state) => ({\n    state\n});\n\nfunction StartAndPauseContainer(props) {\n    const [exerciseNumber, setExerciseNumber] = useState(0)\n    let exerciseArray = [{ name: 'Neck', img: Neck }, { name: 'Hands', img: Hands }]\n\n    return (\n        <div>\n            <Exercise exercise = {exerciseArray[exerciseNumber].img}/>\n            <Timer />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        heatup: (exercise) => { dispatch(heatupAC(exercise)) },\n        startTimer: (seconds) => { dispatch(startTimerAC(seconds)) },\n        setExerciseQuantity: (quntity) => { dispatch(setExerciseQuantityAC(quntity)) },\n        decrExerciseQuantity: () => { dispatch(decrExerciseQuantityAC()) }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StartAndPauseContainer);\n"]},"metadata":{},"sourceType":"module"}