{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"./Timer.css\";\nimport PauseResumeButton from './PauseResumeButton';\nexport default function Timer(props) {\n  const _useState = useState(100),\n        _useState2 = _slicedToArray(_useState, 2),\n        progressState = _useState2[0],\n        setProgressState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pauseTimer = _useState4[0],\n        setPauseTimer = _useState4[1];\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      updateProgress(1);\n    }, props.duration);\n\n    if (progressState <= 0) {\n      clearTimeout(timer);\n      props.setTimerFinish(true);\n    } else if (pauseTimer) {\n      clearTimeout(timer);\n    }\n  });\n  useEffect(() => {\n    setProgressState(100);\n  }, [props]);\n\n  function updateProgress(value) {\n    setProgressState(progressState - value);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"timerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"progressbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: progressState + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(PauseResumeButton, {\n    setPauseTimer: setPauseTimer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","PauseResumeButton","Timer","props","progressState","setProgressState","pauseTimer","setPauseTimer","timer","setTimeout","updateProgress","duration","clearTimeout","setTimerFinish","value","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBACSJ,QAAQ,CAAC,GAAD,CADjB;AAAA;AAAA,QAC1BK,aAD0B;AAAA,QACXC,gBADW;;AAAA,qBAEGN,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,QAE1BO,UAF0B;AAAA,QAEdC,aAFc;;AAIjCP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AACzBC,MAAAA,cAAc,CAAC,CAAD,CAAd;AACH,KAFqB,EAEnBP,KAAK,CAACQ,QAFa,CAAtB;;AAIA,QAAIP,aAAa,IAAI,CAArB,EAAwB;AACpBQ,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACAL,MAAAA,KAAK,CAACU,cAAN,CAAqB,IAArB;AACH,KAHD,MAGO,IAAIP,UAAJ,EAAgB;AACnBM,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACH;AACJ,GAXQ,CAAT;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,gBAAgB,CAAC,GAAD,CAAhB;AACH,GAFQ,EAEP,CAACF,KAAD,CAFO,CAAT;;AAIA,WAASO,cAAT,CAAwBI,KAAxB,EAA+B;AAC3BT,IAAAA,gBAAgB,CAACD,aAAa,GAAGU,KAAjB,CAAhB;AACH;;AAED,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEX,aAAa,GAAG;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,oBAAC,iBAAD;AAAmB,IAAA,aAAa,EAAEG,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./Timer.css\";\n\nimport PauseResumeButton from './PauseResumeButton';\n\nexport default function Timer(props) {\n    const [progressState, setProgressState] = useState(100)\n    const [pauseTimer, setPauseTimer] = useState(false)\n\n    useEffect(() => {\n        let timer = setTimeout(() => {\n            updateProgress(1)\n        }, props.duration)\n\n        if (progressState <= 0) {\n            clearTimeout(timer)\n            props.setTimerFinish(true); \n        } else if (pauseTimer) {\n            clearTimeout(timer)     \n        }\n    });\n\n    useEffect(() => {\n        setProgressState(100)\n    },[props])\n\n    function updateProgress(value) {\n        setProgressState(progressState - value)\n    }\n\n    return (\n        <>\n            <div className='timerContainer'>\n                <div id=\"progressbar\">\n                    <div style={{ width: progressState + '%' }}></div>\n                </div>\n            </div>\n            <PauseResumeButton setPauseTimer={setPauseTimer}/>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}