{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport StratAndPauseButton from './StratAndPauseButton/StratAndPauseButton';\nimport { heatupAC, startTimerAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport Heatup from './Heatup/Heatup';\nimport Header from './Header/Header';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction StartAndPauseContainer(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  useEffect(() => {\n    props.setAppState(props.state.training.status);\n\n    if (timerStatus === 'done') {\n      setNextExercise(nextExercise + 1);\n    }\n  }, [timerStatus]);\n  useEffect(() => {\n    setTimerStatus('waiting');\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Header, {\n    state: props.state.training.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), show && React.createElement(Heatup, {\n    next: nextExercise,\n    setHeatup: props.heatup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), showTimer && React.createElement(Timer, {\n    time: time,\n    timerStatus: timerStatus,\n    setTimerStatus: setTimerStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(StratAndPauseButton, {\n    setStartTimer: setShowTimer,\n    setShow: setShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    heatup: exercise => {\n      dispatch(heatupAC(exercise));\n    },\n    startTimer: seconds => {\n      dispatch(startTimerAC(seconds));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartAndPauseContainer);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx"],"names":["React","useState","useEffect","StratAndPauseButton","heatupAC","startTimerAC","connect","Heatup","Header","mapStateToProps","state","StartAndPauseContainer","props","show","setShow","setAppState","training","status","timerStatus","setNextExercise","nextExercise","setTimerStatus","heatup","showTimer","time","setShowTimer","mapDispatchToProps","dispatch","exercise","startTimer","seconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,0BAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA;AADgC,CAAZ,CAAxB;;AAIA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,oBACXX,QAAQ,CAAC,IAAD,CADG;AAAA;AAAA,QAC5BY,IAD4B;AAAA,QACtBC,OADsB;;AAInCZ,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAACG,WAAN,CAAkBH,KAAK,CAACF,KAAN,CAAYM,QAAZ,CAAqBC,MAAvC;;AACA,QAAIC,WAAW,KAAK,MAApB,EAA4B;AACxBC,MAAAA,eAAe,CAAEC,YAAY,GAAG,CAAjB,CAAf;AACH;AACJ,GALQ,EAKN,CAACF,WAAD,CALM,CAAT;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,cAAc,CAAC,SAAD,CAAd;AACH,GAFQ,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAET,KAAK,CAACF,KAAN,CAAYM,QAAZ,CAAqBC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKJ,IAAI,IAAI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEO,YAAd;AAA4B,IAAA,SAAS,EAAER,KAAK,CAACU,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb,EAGKC,SAAS,IAAI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,IAAb;AAAmB,IAAA,WAAW,EAAEN,WAAhC;AAA6C,IAAA,cAAc,EAAEG,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHlB,EAII,oBAAC,mBAAD;AAAqB,IAAA,aAAa,EAAEI,YAApC;AAAkD,IAAA,OAAO,EAAEX,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHL,IAAAA,MAAM,EAAGM,QAAD,IAAc;AAAED,MAAAA,QAAQ,CAACvB,QAAQ,CAACwB,QAAD,CAAT,CAAR;AAA8B,KADnD;AAEHC,IAAAA,UAAU,EAAIC,OAAD,IAAa;AAAEH,MAAAA,QAAQ,CAACtB,YAAY,CAACyB,OAAD,CAAb,CAAR;AAAiC;AAF1D,GAAP;AAIH,CALD;;AAOA,eAAexB,OAAO,CAClBG,eADkB,EAElBiB,kBAFkB,CAAP,CAGbf,sBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport StratAndPauseButton from './StratAndPauseButton/StratAndPauseButton'\nimport { heatupAC, startTimerAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport Heatup from './Heatup/Heatup'\nimport Header from './Header/Header'\n\nconst mapStateToProps = (state) => ({\n    state\n});\n\nfunction StartAndPauseContainer(props) {\n    const [show, setShow] = useState(null)\n\n\n    useEffect(() => {\n        props.setAppState(props.state.training.status)\n        if (timerStatus === 'done') {\n            setNextExercise (nextExercise + 1)            \n        }\n    }, [timerStatus]);\n\n    useEffect(() => {\n        setTimerStatus('waiting')\n    });\n    \n    return (\n        <div>\n            <Header state={props.state.training.status} />\n            {show && <Heatup next={nextExercise} setHeatup={props.heatup} />}\n            {showTimer && <Timer time={time} timerStatus={timerStatus} setTimerStatus={setTimerStatus} />}\n            <StratAndPauseButton setStartTimer={setShowTimer} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        heatup: (exercise) => { dispatch(heatupAC(exercise)) },\n        startTimer : (seconds) => { dispatch(startTimerAC(seconds)) }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StartAndPauseContainer);\n"]},"metadata":{},"sourceType":"module"}