{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Heatup/Heatup.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Exercise from '../Exrcise/Exercise';\nimport './Heatup.css';\nimport Neck from './neck.jpg';\nimport Hands from './hands.jpg';\nimport Timer from '../Timer/Timer';\nexport default function Heatup(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        needChange = _useState2[0],\n        setNeedChange = _useState2[1];\n\n  const _useState3 = useState(100),\n        _useState4 = _slicedToArray(_useState3, 2),\n        progressState = _useState4[0],\n        setprogressState = _useState4[1];\n\n  let exerciseArray = [{\n    name: 'Neck',\n    img: Neck\n  }, {\n    name: 'Hands',\n    img: Hands\n  }, {\n    name: 'Neck',\n    img: Neck\n  }];\n  useEffect(() => {\n    props.setExerciseQuantity(exerciseArray.length - 1);\n  }, [exerciseArray.length]);\n  useEffect(() => {\n    if (props.exerciseNumber >= 0) {\n      props.setHeatupExercise(exerciseArray[props.exerciseNumber].name);\n    }\n  }, [props.exerciseNumber]);\n  useEffect(() => {\n    if (needChange && props.exerciseNumber > 0) {\n      props.decrExerciseQuantity();\n      setprogressState(100);\n      setNeedChange(false);\n    } else {// finish\n    }\n  }, [needChange]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, exerciseArray[props.exerciseNumber] && React.createElement(Exercise, {\n    exercise: exerciseArray[props.exerciseNumber],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Timer, {\n    setNeedChange: setNeedChange,\n    setprogressState: setprogressState,\n    progressState: progressState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Heatup/Heatup.jsx"],"names":["React","useState","useEffect","Exercise","Neck","Hands","Timer","Heatup","props","needChange","setNeedChange","progressState","setprogressState","exerciseArray","name","img","setExerciseQuantity","length","exerciseNumber","setHeatupExercise","decrExerciseQuantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACEP,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,QAC3BQ,UAD2B;AAAA,QACfC,aADe;;AAAA,qBAEQT,QAAQ,CAAC,GAAD,CAFhB;AAAA;AAAA,QAE3BU,aAF2B;AAAA,QAEZC,gBAFY;;AAIlC,MAAIC,aAAa,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAEX;AAArB,GAAD,EAA8B;AAAEU,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAEV;AAAtB,GAA9B,EAA6D;AAAES,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAEX;AAArB,GAA7D,CAApB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACQ,mBAAN,CAA0BH,aAAa,CAACI,MAAd,GAAqB,CAA/C;AACH,GAFQ,EAEN,CAACJ,aAAa,CAACI,MAAf,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,CAACU,cAAN,IAAwB,CAA5B,EAA+B;AAE3BV,MAAAA,KAAK,CAACW,iBAAN,CAAwBN,aAAa,CAACL,KAAK,CAACU,cAAP,CAAb,CAAoCJ,IAA5D;AACH;AACJ,GALQ,EAKN,CAACN,KAAK,CAACU,cAAP,CALM,CAAT;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,UAAU,IAAID,KAAK,CAACU,cAAN,GAAuB,CAAzC,EAA4C;AACxCV,MAAAA,KAAK,CAACY,oBAAN;AACAR,MAAAA,gBAAgB,CAAC,GAAD,CAAhB;AACAF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAJD,MAIS,CACL;AACH;AACJ,GARQ,EAQP,CAACD,UAAD,CARO,CAAT;AAUA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,aAAa,CAACL,KAAK,CAACU,cAAP,CAAb,IAAuC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEL,aAAa,CAACL,KAAK,CAACU,cAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5C,CADJ,EAII,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAER,aAAtB;AAAqC,IAAA,gBAAgB,EAAEE,gBAAvD;AAAyE,IAAA,aAAa,EAAED,aAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Exercise from '../Exrcise/Exercise'\nimport './Heatup.css'\nimport Neck from './neck.jpg';\nimport Hands from './hands.jpg';\nimport Timer from '../Timer/Timer'\n\nexport default function Heatup(props) {\n    const [needChange, setNeedChange] = useState(false)\n    const [progressState, setprogressState] = useState(100)\n\n    let exerciseArray = [{ name: 'Neck', img: Neck }, { name: 'Hands', img: Hands }, { name: 'Neck', img: Neck }]    \n\n    useEffect(() => {\n        props.setExerciseQuantity(exerciseArray.length-1)\n    }, [exerciseArray.length])\n\n    useEffect(() => {\n        if (props.exerciseNumber >= 0) {\n            \n            props.setHeatupExercise(exerciseArray[props.exerciseNumber].name)\n        }          \n    }, [props.exerciseNumber])\n\n    useEffect(() => {\n        if (needChange && props.exerciseNumber > 0) {\n            props.decrExerciseQuantity()             \n            setprogressState(100)\n            setNeedChange(false)            \n        }   else {\n            // finish\n        }   \n    },[needChange])\n    \n    return (\n        <>            \n            <div className=\"imgContainer\">\n                {exerciseArray[props.exerciseNumber] && <Exercise exercise={exerciseArray[props.exerciseNumber]} />}                \n            </div>\n            <Timer setNeedChange={setNeedChange} setprogressState={setprogressState} progressState={progressState}/>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}