{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport StratAndPauseButton from './StratAndPauseButton/StratAndPauseButton';\nimport { heatupAC, startTimerAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport Heatup from './Heatup/Heatup';\nimport Header from './Header/Header';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction StartAndPauseContainer(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Header, {\n    state: props.state.training.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), show && React.createElement(Heatup, {\n    setHeatup: props.heatup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(StratAndPauseButton, {\n    setStartTimer: setShowTimer,\n    setShow: setShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    heatup: exercise => {\n      dispatch(heatupAC(exercise));\n    },\n    startTimer: seconds => {\n      dispatch(startTimerAC(seconds));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartAndPauseContainer);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx"],"names":["React","useState","useEffect","StratAndPauseButton","heatupAC","startTimerAC","connect","Heatup","Header","mapStateToProps","state","StartAndPauseContainer","props","show","setShow","training","status","heatup","setShowTimer","mapDispatchToProps","dispatch","exercise","startTimer","seconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,0BAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA;AADgC,CAAZ,CAAxB;;AAIA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,oBACXX,QAAQ,CAAC,IAAD,CADG;AAAA;AAAA,QAC5BY,IAD4B;AAAA,QACtBC,OADsB;;AAGnC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEF,KAAK,CAACF,KAAN,CAAYK,QAAZ,CAAqBC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKH,IAAI,IAAI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,KAAK,CAACK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb,EAGI,oBAAC,mBAAD;AAAqB,IAAA,aAAa,EAAEC,YAApC;AAAkD,IAAA,OAAO,EAAEJ,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHH,IAAAA,MAAM,EAAGI,QAAD,IAAc;AAAED,MAAAA,QAAQ,CAAChB,QAAQ,CAACiB,QAAD,CAAT,CAAR;AAA8B,KADnD;AAEHC,IAAAA,UAAU,EAAIC,OAAD,IAAa;AAAEH,MAAAA,QAAQ,CAACf,YAAY,CAACkB,OAAD,CAAb,CAAR;AAAiC;AAF1D,GAAP;AAIH,CALD;;AAOA,eAAejB,OAAO,CAClBG,eADkB,EAElBU,kBAFkB,CAAP,CAGbR,sBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport StratAndPauseButton from './StratAndPauseButton/StratAndPauseButton'\nimport { heatupAC, startTimerAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport Heatup from './Heatup/Heatup'\nimport Header from './Header/Header'\n\nconst mapStateToProps = (state) => ({\n    state\n});\n\nfunction StartAndPauseContainer(props) {\n    const [show, setShow] = useState(null)\n       \n    return (\n        <div>\n            <Header state={props.state.training.status} />\n            {show && <Heatup setHeatup={props.heatup} />}\n            <StratAndPauseButton setStartTimer={setShowTimer} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        heatup: (exercise) => { dispatch(heatupAC(exercise)) },\n        startTimer : (seconds) => { dispatch(startTimerAC(seconds)) }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StartAndPauseContainer);\n"]},"metadata":{},"sourceType":"module"}