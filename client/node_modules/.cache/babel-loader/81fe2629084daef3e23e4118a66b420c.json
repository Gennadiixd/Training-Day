{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Heatup/Heatup.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Exercise from '../Exrcise/Exercise';\nimport './Heatup.css';\nimport Neck from './neck.jpg';\nimport Hands from './hands.jpg';\nimport Timer from '../Timer/Timer';\nexport default function Heatup(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        needChange = _useState2[0],\n        setNeedChange = _useState2[1];\n\n  let exerciseArray = [{\n    name: 'Neck',\n    img: Neck\n  }, {\n    name: 'Hands',\n    img: Hands\n  }];\n\n  const _useState3 = useState(100),\n        _useState4 = _slicedToArray(_useState3, 2),\n        progressState = _useState4[0],\n        setprogressState = _useState4[1];\n\n  useEffect(() => {\n    props.setExerciseQuantity(exerciseArray.length - 1);\n  }, [exerciseArray.length]);\n  useEffect(() => {\n    if (props.exerciseNumber) {\n      props.setHeatupExercise(exerciseArray[props.exerciseNumber].name);\n    }\n  }, [props.exerciseNumber]);\n  useEffect(() => {\n    needChange && props.decrExerciseQuantity();\n    setNeedChange(false);\n  }, [needChange]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, exerciseArray[props.exerciseNumber] && React.createElement(Exercise, {\n    exercise: exerciseArray[props.exerciseNumber],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Timer, {\n    setNeedChange: setNeedChange,\n    setprogressState: setprogressState,\n    progressState: progressState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Heatup/Heatup.jsx"],"names":["React","useState","useEffect","Exercise","Neck","Hands","Timer","Heatup","props","needChange","setNeedChange","exerciseArray","name","img","progressState","setprogressState","setExerciseQuantity","length","exerciseNumber","setHeatupExercise","decrExerciseQuantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACEP,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,QAC3BQ,UAD2B;AAAA,QACfC,aADe;;AAElC,MAAIC,aAAa,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAET;AAArB,GAAD,EAA8B;AAAEQ,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAER;AAAtB,GAA9B,CAApB;;AAFkC,qBAGQJ,QAAQ,CAAC,GAAD,CAHhB;AAAA;AAAA,QAG3Ba,aAH2B;AAAA,QAGZC,gBAHY;;AAKlCb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACQ,mBAAN,CAA0BL,aAAa,CAACM,MAAd,GAAqB,CAA/C;AACH,GAFQ,EAEN,CAACN,aAAa,CAACM,MAAf,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,CAACU,cAAV,EAA0B;AACtBV,MAAAA,KAAK,CAACW,iBAAN,CAAwBR,aAAa,CAACH,KAAK,CAACU,cAAP,CAAb,CAAoCN,IAA5D;AACH;AACJ,GAJQ,EAIN,CAACJ,KAAK,CAACU,cAAP,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,IAAID,KAAK,CAACY,oBAAN,EAAd;AACAV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHQ,EAGN,CAACD,UAAD,CAHM,CAAT;AAKA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,aAAa,CAACH,KAAK,CAACU,cAAP,CAAb,IAAuC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEP,aAAa,CAACH,KAAK,CAACU,cAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5C,CADJ,EAII,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAER,aAAtB;AAAqC,IAAA,gBAAgB,EAAEK,gBAAvD;AAAyE,IAAA,aAAa,EAAED,aAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Exercise from '../Exrcise/Exercise'\nimport './Heatup.css'\nimport Neck from './neck.jpg';\nimport Hands from './hands.jpg';\nimport Timer from '../Timer/Timer'\n\nexport default function Heatup(props) {\n    const [needChange, setNeedChange] = useState(false)\n    let exerciseArray = [{ name: 'Neck', img: Neck }, { name: 'Hands', img: Hands }]    \n    const [progressState, setprogressState] = useState(100)\n\n    useEffect(() => {\n        props.setExerciseQuantity(exerciseArray.length-1)\n    }, [exerciseArray.length])\n\n    useEffect(() => {\n        if (props.exerciseNumber) {\n            props.setHeatupExercise(exerciseArray[props.exerciseNumber].name)\n        }          \n    }, [props.exerciseNumber])\n\n    useEffect(() => {\n        needChange && props.decrExerciseQuantity()\n        setNeedChange(false)\n    }, [needChange])\n\n    return (\n        <>            \n            <div className=\"imgContainer\">\n                {exerciseArray[props.exerciseNumber] && <Exercise exercise={exerciseArray[props.exerciseNumber]} />}                \n            </div>\n            <Timer setNeedChange={setNeedChange} setprogressState={setprogressState} progressState={progressState}/>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}