{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"./Timer.css\";\nexport default function Timer(props) {\n  const _useState = useState(100),\n        _useState2 = _slicedToArray(_useState, 2),\n        progressState = _useState2[0],\n        setprogressState = _useState2[1];\n\n  useEffect(() => {\n    setTimeout(() => {\n      updateProgress(props.time);\n    }, 100);\n\n    if (progressState < 0) {\n      clearTimeout(timer);\n    }\n  });\n\n  function updateProgress(value) {\n    setprogressState(progressState - value);\n  }\n\n  return React.createElement(\"div\", {\n    id: \"progressbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: progressState + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Timer/Timer.jsx"],"names":["React","useState","useEffect","Timer","props","progressState","setprogressState","setTimeout","updateProgress","time","clearTimeout","timer","value","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBACSH,QAAQ,CAAC,GAAD,CADjB;AAAA;AAAA,QAC1BI,aAD0B;AAAA,QACXC,gBADW;;AAGjCJ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,cAAc,CAACJ,KAAK,CAACK,IAAP,CAAd;AACH,KAFS,EAEP,GAFO,CAAV;;AAGA,QAAIJ,aAAa,GAAG,CAApB,EAAsB;AAClBK,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACH;AACJ,GAPQ,CAAT;;AASA,WAASH,cAAT,CAAwBI,KAAxB,EAA+B;AAC3BN,IAAAA,gBAAgB,CAACD,aAAa,GAAGO,KAAjB,CAAhB;AACH;;AAED,SACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAI;AAACC,MAAAA,KAAK,EAAGR,aAAa,GAAC;AAAvB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./Timer.css\";\n\nexport default function Timer(props) {\n    const [progressState, setprogressState] = useState(100)\n    \n    useEffect(() => {\n        setTimeout(() => {\n            updateProgress(props.time)\n        }, 100)\n        if (progressState < 0){\n            clearTimeout(timer)\n        }\n    });\n\n    function updateProgress(value) {\n        setprogressState(progressState - value)\n    }\n\n    return (\n        <div id=\"progressbar\">\n            <div style = {{width : progressState+'%'}}></div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}