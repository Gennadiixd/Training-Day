{"ast":null,"code":"import _slicedToArray from \"/home/gennadii/Elbrus/Training-Day/t-day/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/client/src/components/ExerciseContainer/ExerciseContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport './ExerciseContainer.css';\nimport Timer from '../Timer/Timer';\nimport Exercise from '../Exrcise/Exercise';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction ExerciseContainer(props) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        exerciseNumber = _useState2[0],\n        setExerciseNumber = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timerFinish = _useState4[0],\n        setTimerFinish = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showExerciseAndTimer = _useState6[0],\n        setShowExerciseAndTimer = _useState6[1];\n\n  const _useState7 = useState(props.activityExercises),\n        _useState8 = _slicedToArray(_useState7, 2),\n        exerciseArray = _useState8[0],\n        setExerciseArray = _useState8[1]; //duration in ms, 100ms = 10sec    \n  //send to redux store intended activity i.e. Heatup or Training\n\n\n  useEffect(() => {\n    props.setActivity(props.activityExercises[exerciseNumber].name);\n  }, [exerciseNumber]); //Change exercise by timer signal\n\n  useEffect(() => {\n    if (timerFinish) {\n      nextExercise(exerciseArray);\n    }\n  }, [timerFinish]);\n  useEffect(() => {}, [props]); //function changing exercises\n\n  function nextExercise(arrayWithExercises) {\n    if (timerFinish) {\n      if (exerciseNumber < arrayWithExercises.length - 1) {\n        setExerciseNumber(exerciseNumber + 1);\n        setTimerFinish(false);\n      } else {\n        props.setActivity('finished');\n        setShowExerciseAndTimer(false);\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, showExerciseAndTimer && React.createElement(Exercise, {\n    exercise: exerciseArray[exerciseNumber],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), showExerciseAndTimer && React.createElement(Timer, {\n    setTimerFinish: setTimerFinish,\n    duration: exerciseArray[exerciseNumber].duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nexport default connect(mapStateToProps, null)(ExerciseContainer);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/client/src/components/ExerciseContainer/ExerciseContainer.jsx"],"names":["React","useState","useEffect","connect","Timer","Exercise","mapStateToProps","state","ExerciseContainer","props","exerciseNumber","setExerciseNumber","timerFinish","setTimerFinish","showExerciseAndTimer","setShowExerciseAndTimer","activityExercises","exerciseArray","setExerciseArray","setActivity","name","nextExercise","arrayWithExercises","length","duration"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,yBAAP;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA;AADgC,CAAZ,CAAxB;;AAIA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,oBAEcR,QAAQ,CAAC,CAAD,CAFtB;AAAA;AAAA,QAEvBS,cAFuB;AAAA,QAEPC,iBAFO;;AAAA,qBAGQV,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,QAGvBW,WAHuB;AAAA,QAGVC,cAHU;;AAAA,qBAI0BZ,QAAQ,CAAC,IAAD,CAJlC;AAAA;AAAA,QAIvBa,oBAJuB;AAAA,QAIDC,uBAJC;;AAAA,qBAKYd,QAAQ,CAACQ,KAAK,CAACO,iBAAP,CALpB;AAAA;AAAA,QAKvBC,aALuB;AAAA,QAKRC,gBALQ,kBAM9B;AACA;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAACU,WAAN,CAAkBV,KAAK,CAACO,iBAAN,CAAwBN,cAAxB,EAAwCU,IAA1D;AACH,GAFQ,EAEN,CAACV,cAAD,CAFM,CAAT,CAR8B,CAW9B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,WAAJ,EAAiB;AACbS,MAAAA,YAAY,CAACJ,aAAD,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACL,WAAD,CAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACO,KAAD,CAFM,CAAT,CAlB8B,CAsB9B;;AACA,WAASY,YAAT,CAAsBC,kBAAtB,EAA0C;AACtC,QAAIV,WAAJ,EAAiB;AACb,UAAIF,cAAc,GAAGY,kBAAkB,CAACC,MAAnB,GAA4B,CAAjD,EAAoD;AAChDZ,QAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAG,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OAHD,MAGO;AACHJ,QAAAA,KAAK,CAACU,WAAN,CAAkB,UAAlB;AACAJ,QAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH;AACJ;AACJ;;AAED,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,oBAAoB,IAAI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEG,aAAa,CAACP,cAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,CADJ,EAIKI,oBAAoB,IAAI,oBAAC,KAAD;AAAO,IAAA,cAAc,EAAED,cAAvB;AAAuC,IAAA,QAAQ,EAAEI,aAAa,CAACP,cAAD,CAAb,CAA8Bc,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ7B,CADJ;AAQH;;AAED,eAAerB,OAAO,CAClBG,eADkB,EAElB,IAFkB,CAAP,CAGbE,iBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport './ExerciseContainer.css'\n\nimport Timer from '../Timer/Timer';\nimport Exercise from '../Exrcise/Exercise'\n\nconst mapStateToProps = (state) => ({\n    state\n});\n\nfunction ExerciseContainer(props) {\n\n    const [exerciseNumber, setExerciseNumber] = useState(0)\n    const [timerFinish, setTimerFinish] = useState(false)\n    const [showExerciseAndTimer, setShowExerciseAndTimer] = useState(true)\n    const [exerciseArray, setExerciseArray] = useState(props.activityExercises)\n    //duration in ms, 100ms = 10sec    \n    //send to redux store intended activity i.e. Heatup or Training\n    useEffect(() => {        \n        props.setActivity(props.activityExercises[exerciseNumber].name)\n    }, [exerciseNumber])\n    //Change exercise by timer signal\n    useEffect(() => {\n        if (timerFinish) {\n            nextExercise(exerciseArray)\n        }\n    }, [timerFinish])\n\n    useEffect(() => {\n        \n    }, [props])\n\n    //function changing exercises\n    function nextExercise(arrayWithExercises) {\n        if (timerFinish) {\n            if (exerciseNumber < arrayWithExercises.length - 1) {                \n                setExerciseNumber(exerciseNumber + 1)\n                setTimerFinish(false)\n            } else {\n                props.setActivity('finished')\n                setShowExerciseAndTimer(false)\n            }\n        }\n    }\n\n    return (\n        <>\n            <div className='imgContainer'>\n                {showExerciseAndTimer && <Exercise exercise={exerciseArray[exerciseNumber]} />}\n            </div>\n            {showExerciseAndTimer && <Timer setTimerFinish={setTimerFinish} duration={exerciseArray[exerciseNumber].duration} />}\n        </>\n    )\n}\n\nexport default connect(\n    mapStateToProps,\n    null,\n)(ExerciseContainer);\n"]},"metadata":{},"sourceType":"module"}