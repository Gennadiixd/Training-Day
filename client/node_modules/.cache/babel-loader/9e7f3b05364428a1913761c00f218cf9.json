{"ast":null,"code":"var _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport StratAndPauseButton from './StratAndPauseButton/StratAndPauseButton';\nimport { heatupAC, startTimerAC, setExerciseQuantityAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { Route } from 'react-router-dom';\nimport Heatup from './Heatup/Heatup';\nimport Header from './Header/Header';\n\nconst mapStateToProps = state => ({\n  state\n});\n\nfunction StartAndPauseContainer(props) {\n  let setHeatupExercise = props.heatup;\n  let setExerciseQuantity;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Header, {\n    state: props.state.training.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Assesment\",\n    render: props => React.createElement(Heatup, {\n      setHeatupExercise: setHeatupExercise,\n      setExerciseQuantity: props.setExerciseQuantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }),\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), props.state.training.exercise && React.createElement(Heatup, {\n    setHeatupExercise: props.heatup,\n    setExerciseQuantity: props.setExerciseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(StratAndPauseButton, {\n    setHeatupExercise: props.heatup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    heatup: exercise => {\n      dispatch(heatupAC(exercise));\n    },\n    startTimer: seconds => {\n      dispatch(startTimerAC(seconds));\n    },\n    setExerciseQuantity: quntity => {\n      dispatch(setExerciseQuantityAC(quntity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartAndPauseContainer);","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/ExerciseContainer.jsx"],"names":["React","useState","useEffect","StratAndPauseButton","heatupAC","startTimerAC","setExerciseQuantityAC","connect","Route","Heatup","Header","mapStateToProps","state","StartAndPauseContainer","props","setHeatupExercise","heatup","setExerciseQuantity","training","status","exercise","mapDispatchToProps","dispatch","startTimer","seconds","quntity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,qBAAjC,QAA8D,0BAA9D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA;AADgC,CAAZ,CAAxB;;AAIA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACnC,MAAIC,iBAAiB,GAAGD,KAAK,CAACE,MAA9B;AACA,MAAIC,mBAAJ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,KAAK,CAACF,KAAN,CAAYM,QAAZ,CAAqBC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAA0B,IAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAEC,iBAA3B;AAA8C,MAAA,mBAAmB,EAAED,KAAK,CAACG,mBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7C;AAA+I,IAAA,KAAK,MAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKH,KAAK,CAACF,KAAN,CAAYM,QAAZ,CAAqBE,QAArB,IAAiC,oBAAC,MAAD;AAAQ,IAAA,iBAAiB,EAAEN,KAAK,CAACE,MAAjC;AAAyC,IAAA,mBAAmB,EAAEF,KAAK,CAACG,mBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHtC,EAII,oBAAC,mBAAD;AAAqB,IAAA,iBAAiB,EAAEH,KAAK,CAACE,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHN,IAAAA,MAAM,EAAGI,QAAD,IAAc;AAAEE,MAAAA,QAAQ,CAAClB,QAAQ,CAACgB,QAAD,CAAT,CAAR;AAA8B,KADnD;AAEHG,IAAAA,UAAU,EAAGC,OAAD,IAAa;AAAEF,MAAAA,QAAQ,CAACjB,YAAY,CAACmB,OAAD,CAAb,CAAR;AAAiC,KAFzD;AAGHP,IAAAA,mBAAmB,EAAGQ,OAAD,IAAa;AAAEH,MAAAA,QAAQ,CAAChB,qBAAqB,CAACmB,OAAD,CAAtB,CAAR;AAA0C;AAH3E,GAAP;AAKH,CAND;;AAQA,eAAelB,OAAO,CAClBI,eADkB,EAElBU,kBAFkB,CAAP,CAGbR,sBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport StratAndPauseButton from './StratAndPauseButton/StratAndPauseButton'\nimport { heatupAC, startTimerAC, setExerciseQuantityAC } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport {Route} from 'react-router-dom';\nimport Heatup from './Heatup/Heatup'\nimport Header from './Header/Header'\n\nconst mapStateToProps = (state) => ({\n    state\n});\n\nfunction StartAndPauseContainer(props) {\n    let setHeatupExercise = props.heatup;\n    let setExerciseQuantity\n    return (\n        <div>\n            <Header state={props.state.training.status} />\n            <Route  path='/Assesment' render={(props) => <Heatup setHeatupExercise={setHeatupExercise} setExerciseQuantity={props.setExerciseQuantity} />} exact/>\n            {props.state.training.exercise && <Heatup setHeatupExercise={props.heatup} setExerciseQuantity={props.setExerciseQuantity} />}\n            <StratAndPauseButton setHeatupExercise={props.heatup} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        heatup: (exercise) => { dispatch(heatupAC(exercise)) },\n        startTimer: (seconds) => { dispatch(startTimerAC(seconds)) },\n        setExerciseQuantity: (quntity) => { dispatch(setExerciseQuantityAC(quntity)) }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StartAndPauseContainer);\n"]},"metadata":{},"sourceType":"module"}