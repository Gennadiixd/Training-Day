{"ast":null,"code":"var _jsxFileName = \"/home/gennadii/Elbrus/Training-Day/t-day/src/components/Heatup/Heatup.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Exercise from '../Exrcise/Exercise';\nimport './Heatup.css';\nimport Neck from './neck.jpg';\nimport Hands from './hands.jpg';\nimport Timer from '../Timer/Timer';\nexport default function Heatup(props) {\n  let exerciseArray = [{\n    name: 'Neck',\n    img: Neck\n  }, {\n    name: 'Hands',\n    img: Hands\n  }, {\n    name: 'Neck',\n    img: Neck\n  }];\n  useEffect(() => {\n    props.setExerciseQuantity(exerciseArray.length - 1);\n  }, [exerciseArray.length]);\n  useEffect(() => {\n    if (props.exerciseNumber >= 0) {\n      props.setHeatupExercise(exerciseArray[props.exerciseNumber].name);\n    }\n  }, [props.exerciseNumber]);\n  useEffect(() => {\n    if (needChange && props.exerciseNumber > 0) {\n      props.decrExerciseQuantity();\n      setprogressState(100);\n      setNeedChange(false);\n    } else {// finish\n    }\n  }, [needChange]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, exerciseArray[props.exerciseNumber] && React.createElement(Exercise, {\n    exercise: exerciseArray[props.exerciseNumber],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Timer, {\n    setNeedChange: setNeedChange,\n    setprogressState: setprogressState,\n    progressState: progressState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/gennadii/Elbrus/Training-Day/t-day/src/components/Heatup/Heatup.jsx"],"names":["React","useState","useEffect","Exercise","Neck","Hands","Timer","Heatup","props","exerciseArray","name","img","setExerciseQuantity","length","exerciseNumber","setHeatupExercise","needChange","decrExerciseQuantity","setprogressState","setNeedChange","progressState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAElC,MAAIC,aAAa,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAEP;AAArB,GAAD,EAA8B;AAAEM,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAEN;AAAtB,GAA9B,EAA6D;AAAEK,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,GAAG,EAAEP;AAArB,GAA7D,CAApB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACI,mBAAN,CAA0BH,aAAa,CAACI,MAAd,GAAqB,CAA/C;AACH,GAFQ,EAEN,CAACJ,aAAa,CAACI,MAAf,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,CAACM,cAAN,IAAwB,CAA5B,EAA+B;AAC3BN,MAAAA,KAAK,CAACO,iBAAN,CAAwBN,aAAa,CAACD,KAAK,CAACM,cAAP,CAAb,CAAoCJ,IAA5D;AACH;AACJ,GAJQ,EAIN,CAACF,KAAK,CAACM,cAAP,CAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,UAAU,IAAIR,KAAK,CAACM,cAAN,GAAuB,CAAzC,EAA4C;AACxCN,MAAAA,KAAK,CAACS,oBAAN;AACAC,MAAAA,gBAAgB,CAAC,GAAD,CAAhB;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAJD,MAIS,CACL;AACH;AACJ,GARQ,EAQP,CAACH,UAAD,CARO,CAAT;AAUA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,aAAa,CAACD,KAAK,CAACM,cAAP,CAAb,IAAuC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEL,aAAa,CAACD,KAAK,CAACM,cAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5C,CADJ,EAII,oBAAC,KAAD;AAAQ,IAAA,aAAa,EAAEK,aAAvB;AAAsC,IAAA,gBAAgB,EAAED,gBAAxD;AAA0E,IAAA,aAAa,EAAEE,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Exercise from '../Exrcise/Exercise'\nimport './Heatup.css'\nimport Neck from './neck.jpg';\nimport Hands from './hands.jpg';\nimport Timer from '../Timer/Timer'\n\nexport default function Heatup(props) {\n\n    let exerciseArray = [{ name: 'Neck', img: Neck }, { name: 'Hands', img: Hands }, { name: 'Neck', img: Neck }]    \n\n    useEffect(() => {\n        props.setExerciseQuantity(exerciseArray.length-1)\n    }, [exerciseArray.length])\n\n    useEffect(() => {\n        if (props.exerciseNumber >= 0) {\n            props.setHeatupExercise(exerciseArray[props.exerciseNumber].name)\n        }          \n    }, [props.exerciseNumber])\n\n    useEffect(() => {\n        if (needChange && props.exerciseNumber > 0) {\n            props.decrExerciseQuantity()             \n            setprogressState(100)\n            setNeedChange(false)            \n        }   else {\n            // finish\n        }   \n    },[needChange])\n    \n    return (\n        <>            \n            <div className=\"imgContainer\">\n                {exerciseArray[props.exerciseNumber] && <Exercise exercise={exerciseArray[props.exerciseNumber]} />}                \n            </div>\n            <Timer  setNeedChange={setNeedChange} setprogressState={setprogressState} progressState={progressState}/>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}